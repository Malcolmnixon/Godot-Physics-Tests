[gd_scene load_steps=4 format=3 uid="uid://b0moexed1sscq"]

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_5bfy2"]
distance = 0.01

[sub_resource type="GDScript" id="GDScript_mkskb"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity: int = ProjectSettings.get_setting(\"physics/2d/default_gravity\")


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_20hbo"]

[node name="Node2d" type="Node2D"]

[node name="StaticBody2d" type="StaticBody2D" parent="."]
rotation = -0.16057

[node name="CollisionShape2d" type="CollisionShape2D" parent="StaticBody2d"]
position = Vector2(600, 500)
shape = SubResource("WorldBoundaryShape2D_5bfy2")

[node name="CharacterBody2d" type="CharacterBody2D" parent="."]
script = SubResource("GDScript_mkskb")

[node name="CollisionShape2d" type="CollisionShape2D" parent="CharacterBody2d"]
position = Vector2(547, 30)
shape = SubResource("CapsuleShape2D_20hbo")
